@page
@using KerykeionCmsUI.Areas.KerykeionCms
@using KerykeionCmsCore.Constants
@model KerykeionCmsUI.Areas.KerykeionCms.Pages.Entities.UpdateModel
@{
    ViewData["Title"] = Model.TableName;
}

<div class="row border-bottom border-secondary">
    <div class="col-sm-6">
        <h2>@Model.BtnUpdateValue</h2>
    </div>
    <div class="col-sm-6 text-right">
        <a class="btn btn-secondary" asp-page="/Entities/Index" asp-route-table="@Model.TableName">@Model.BtnBackValue</a>
    </div>
</div>
<partial name="_StatusMessage" model="Model.StatusMessage" />
<div class="col-sm-6 mt-3 border border-info p-3">
    <form method="post" id="update-entity-form" asp-page-handler="Update">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="TableName" />
        <input type="hidden" asp-for="EntityId" />
        @foreach (var prop in Model.Properties)
        {
            var value = Model.Entity.GetType().GetProperty(prop.Name)?.GetValue(Model.Entity);
            if (value == null)
            {
                continue;
            }

            if (prop.Name.Equals("name", StringComparison.OrdinalIgnoreCase))
            {
                <div class="form-group">
                    <label for="@prop.Name">@Model.NameDisplay</label>
                    <input id="@prop.Name" name="@prop.Name" type="text" class="form-control"
                           data-val="true" data-val-required="@Model.NameRequiredError"
                           data-val-length-max="50" data-val-length-min="2" data-val-length="@Model.NameLengthError" value="@value"/>
                    <span data-valmsg-replace="true" data-valmsg-for="@prop.Name" class="text-danger"></span>
                </div>
                continue;
            }

            if (prop.Name.Equals(PropertyNameConstants.Id, StringComparison.OrdinalIgnoreCase))
            {
                <div class="form-group">
                    <label for="@prop.Name">@prop.Name</label>
                    <input readonly id="@prop.Name" name="@prop.Name" value="@value" @ManageInputs.GetInputType(prop?.ClrType?.FullName) class="form-control" />
                </div>
                continue;
            }

            if (bool.TryParse(value.ToString(), out _))
            {
                <div class="form-group">
                    <label for="@prop.Name">@prop.Name</label>
                    <input id="@prop.Name" name="@prop.Name" @(ManageInputs.GetInputType(prop?.ClrType?.FullName)) class="form-control" @ManageInputs.GetInputValue(value.ToString()) />
                </div>
                continue;
            }

            <div class="form-group">
                <label for="@prop.Name">@prop.Name</label>
                <input id="@prop.Name" name="@prop.Name" @(ManageInputs.GetInputType(prop?.ClrType?.FullName)) class="form-control" value="@(ManageInputs.GetInputValue(value.ToString()))" @(prop.Name.Equals(PropertyNameConstants.DateTimeCreated, StringComparison.OrdinalIgnoreCase) ? "readonly" : "") />
            </div>
        }
        @foreach (var prop in Model.ForeignKeys)
        {
            <div class="form-group">
                <label for="@prop.Name">@prop.Name</label>
                <input id="@prop.Name" name="@prop.Name" class="form-control" value="@(prop.Value.Equals(Guid.Empty.ToString()) ? "" : prop.Value)" />
            </div>
        }
        <div class="form-group">
            <input type="submit" class="btn btn-primary" id="btn-update-entity" value="@Model.BtnUpdateValue" />
        </div>
    </form>
</div>

<div class="row">
    <form class="col text-right" method="post" asp-page-handler="Delete">
        <input type="hidden" asp-for="@Model.EntityId" />
        <input type="hidden" asp-for="@Model.TableName" />
        <input type="submit" value="@Model.BtnDeleteValue" class="btn btn-danger" />
    </form>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        $("#open-language-picker").find("form")
            .append(`<input type="hidden" name="table" value="@(Model.TableName)" />`)
            .append(`<input type="hidden" name="entity-id" value="@(Model.EntityId)" />`)
    </script>
}